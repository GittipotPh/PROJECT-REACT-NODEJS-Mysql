{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gongg\\\\my-app\\\\project React2\\\\React-Client\\\\src\\\\components\\\\Samsaung.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport GoogleMapComponent from './APIgoogle';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Samsaung() {\n  _s();\n  const [banners, setBanners] = useState([]);\n  useEffect(() => {\n    // Fetch banners using Axios\n    axios.get('http://localhost:3004/banners').then(response => setBanners(response.data)).catch(error => console.error('Error fetching banners:', error));\n  }, []); // Empty dependency array to run the effect only once on mount\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      justifyContent: 'center',\n      alignItems: 'flex-end'\n    },\n    children: [banners.map(banner => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        margin: '20px',\n        padding: '30px',\n        border: '5px solid #ccc',\n        borderRadius: '10px',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: banner.img_brand_url,\n        alt: banner.topic,\n        style: {\n          width: '300px',\n          height: '300px',\n          marginBottom: '10px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: banner.img_promotion_url,\n        alt: banner.topic,\n        style: {\n          width: '300px',\n          height: '300px',\n          marginBottom: '10px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          fontSize: '24px',\n          marginBottom: '10px',\n          fontWeight: 'bold'\n        },\n        children: banner.topic\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          fontSize: '18px',\n          color: '#555',\n          textAlign: 'center',\n          fontWeight: 'bold'\n        },\n        children: banner.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this)]\n    }, banner.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(GoogleMapComponent, {\n      style: {\n        marginTop: '20px',\n        width: '100%',\n        height: '400px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n_s(Samsaung, \"hrLvPCLPHM6cpg7gXxBBGT80Iz0=\");\n_c = Samsaung;\nexport default Samsaung;\nvar _c;\n$RefreshReg$(_c, \"Samsaung\");","map":{"version":3,"names":["React","useState","useEffect","axios","GoogleMapComponent","jsxDEV","_jsxDEV","Samsaung","_s","banners","setBanners","get","then","response","data","catch","error","console","style","display","flexWrap","justifyContent","alignItems","children","map","banner","margin","padding","border","borderRadius","flexDirection","src","img_brand_url","alt","topic","width","height","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","img_promotion_url","fontSize","fontWeight","color","textAlign","content","id","marginTop","_c","$RefreshReg$"],"sources":["C:/Users/gongg/my-app/project React2/React-Client/src/components/Samsaung.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport GoogleMapComponent from './APIgoogle';\r\n\r\nfunction Samsaung() {\r\n  const [banners, setBanners] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Fetch banners using Axios\r\n    axios.get('http://localhost:3004/banners')\r\n      .then(response => setBanners(response.data))\r\n      .catch(error => console.error('Error fetching banners:', error));\r\n  }, []); // Empty dependency array to run the effect only once on mount\r\n\r\n  return (\r\n    <div style={{ display: 'flex', flexWrap: 'wrap', justifyContent: 'center', alignItems: 'flex-end' }}>\r\n      {banners.map(banner => (\r\n        <div key={banner.id} style={{ margin: '20px', padding: '30px', border: '5px solid #ccc', borderRadius: '10px', display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\r\n          <img src={banner.img_brand_url} alt={banner.topic} style={{ width: '300px', height: '300px', marginBottom: '10px' }} />\r\n          <img src={banner.img_promotion_url} alt={banner.topic} style={{ width: '300px', height: '300px', marginBottom: '10px' }} />\r\n          <h3 style={{ fontSize: '24px', marginBottom: '10px' , fontWeight : 'bold'}}>{banner.topic}</h3>\r\n          <p style={{ fontSize: '18px', color: '#555', textAlign: 'center', fontWeight : 'bold' }}>{banner.content}</p>\r\n        </div>\r\n      ))}\r\n\r\n      <GoogleMapComponent style={{ marginTop: '20px', width: '100%', height: '400px' }} />\r\n    </div> \r\n  );\r\n}\r\n\r\nexport default Samsaung;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}