{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gongg\\\\my-app\\\\project React2\\\\React-Client\\\\src\\\\components\\\\APIgoogle.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { GoogleMap, LoadScript, Marker } from '@react-google-maps/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst mapContainerStyle = {\n  width: '70%',\n  height: '400px'\n};\nconst GoogleMapComponent = () => {\n  _s();\n  const [shops, setShops] = useState([]);\n  const [averageLat, setAverageLat] = useState(0);\n  const [averageLng, setAverageLng] = useState(0);\n  useEffect(() => {\n    fetch('http://localhost:3004/shops').then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    }).then(data => {\n      setShops(data);\n\n      // Calculate the average latitude and longitude of all shops\n      const avgLat = data.reduce((sum, shop) => sum + shop.lat, 0) / data.length;\n      const avgLng = data.reduce((sum, shop) => sum + shop.lng, 0) / data.length;\n      setAverageLat(isNaN(avgLat) ? 0 : avgLat);\n      setAverageLng(isNaN(avgLng) ? 0 : avgLng);\n      console.log('Shops data:', data);\n      console.log('Average Lat:', avgLat);\n      console.log('Average Lng:', avgLng);\n    }).catch(error => console.error('Error fetching data:', error));\n  }, []);\n\n  // Set the center to the average coordinates\n  const center = {\n    lat: averageLat,\n    lng: averageLng\n  };\n  console.log('Center:', center);\n  return /*#__PURE__*/_jsxDEV(LoadScript, {\n    googleMapsApiKey: \"AIzaSyAYHTud_Mh7rCNOwUx-Eee9b841J_SqqvQ\",\n    children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n      mapContainerStyle: mapContainerStyle,\n      center: center,\n      zoom: 6,\n      children: shops.map(shop => /*#__PURE__*/_jsxDEV(Marker, {\n        position: {\n          lat: shop.lat,\n          lng: shop.lng\n        }\n      }, shop.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(GoogleMapComponent, \"4eyHyaEuEtB5S8Ii8jauuUx/X3k=\");\n_c = GoogleMapComponent;\nexport default GoogleMapComponent;\nvar _c;\n$RefreshReg$(_c, \"GoogleMapComponent\");","map":{"version":3,"names":["React","useState","useEffect","GoogleMap","LoadScript","Marker","jsxDEV","_jsxDEV","mapContainerStyle","width","height","GoogleMapComponent","_s","shops","setShops","averageLat","setAverageLat","averageLng","setAverageLng","fetch","then","response","ok","Error","json","data","avgLat","reduce","sum","shop","lat","length","avgLng","lng","isNaN","console","log","catch","error","center","googleMapsApiKey","children","zoom","map","position","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/gongg/my-app/project React2/React-Client/src/components/APIgoogle.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { GoogleMap, LoadScript, Marker } from '@react-google-maps/api';\r\n\r\nconst mapContainerStyle = { width: '70%', height: '400px' };\r\n\r\nconst GoogleMapComponent = () => {\r\n  const [shops, setShops] = useState([]);\r\n  const [averageLat, setAverageLat] = useState(0);\r\n  const [averageLng, setAverageLng] = useState(0);\r\n\r\n  useEffect(() => {\r\n    fetch('http://localhost:3004/shops')\r\n      .then(response => {\r\n        if (!response.ok) {\r\n          throw new Error('Network response was not ok');\r\n        }\r\n        return response.json();\r\n      })\r\n      .then(data => {\r\n        setShops(data);\r\n\r\n        // Calculate the average latitude and longitude of all shops\r\n        const avgLat = data.reduce((sum, shop) => sum + shop.lat, 0) / data.length;\r\n        const avgLng = data.reduce((sum, shop) => sum + shop.lng, 0) / data.length;\r\n\r\n        setAverageLat(isNaN(avgLat) ? 0 : avgLat);\r\n        setAverageLng(isNaN(avgLng) ? 0 : avgLng);\r\n\r\n        console.log('Shops data:', data);\r\n        console.log('Average Lat:', avgLat);\r\n        console.log('Average Lng:', avgLng);\r\n      })\r\n      .catch(error => console.error('Error fetching data:', error));\r\n  }, []);\r\n\r\n  // Set the center to the average coordinates\r\n  const center = {\r\n    lat: averageLat,\r\n    lng: averageLng,\r\n  };\r\n\r\n  console.log('Center:', center);\r\n\r\n  return (\r\n    <LoadScript googleMapsApiKey=\"AIzaSyAYHTud_Mh7rCNOwUx-Eee9b841J_SqqvQ\">\r\n      <GoogleMap mapContainerStyle={mapContainerStyle} center={center} zoom={6}>\r\n        {shops.map(shop => (\r\n          <Marker\r\n            key={shop.id}\r\n            position={{ lat: shop.lat, lng: shop.lng }}\r\n          />\r\n        ))}\r\n      </GoogleMap>\r\n    </LoadScript>\r\n  );\r\n};\r\n\r\nexport default GoogleMapComponent;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}