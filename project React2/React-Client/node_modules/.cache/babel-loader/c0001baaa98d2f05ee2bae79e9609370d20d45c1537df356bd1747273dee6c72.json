{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gongg\\\\my-app\\\\Project React\\\\React-Client\\\\src\\\\components\\\\AdminCRUDBanners.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './AdminManagement.css'; // Import your CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminManagement = () => {\n  _s();\n  const [selectedTable, setSelectedTable] = useState('');\n  const [tables, setTables] = useState([]);\n  const [crudAction, setCrudAction] = useState('');\n  const [data, setData] = useState([]);\n  const [formData, setFormData] = useState({});\n\n  // Fetch available tables when the component mounts\n  useEffect(() => {\n    const fetchTables = async () => {\n      try {\n        const response = await axios.get('http://localhost:3004/tables');\n        setTables(response.data);\n      } catch (error) {\n        console.error('Error fetching tables:', error);\n      }\n    };\n    fetchTables();\n  }, []);\n\n  // Fetch data for the selected table\n  const fetchData = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:3004/\".concat(selectedTable));\n      setData(response.data);\n    } catch (error) {\n      console.error(\"Error fetching data for \".concat(selectedTable, \":\"), error);\n    }\n  };\n\n  // Perform CRUD operation\n  const handleCrud = async () => {\n    try {\n      if (crudAction === 'get') {\n        await fetchData();\n      } else {\n        const response = await axios[crudAction](\"http://localhost:3004/\".concat(selectedTable), formData);\n        console.log(response.data);\n        // Optionally, you can fetch the updated data after a successful CRUD operation\n        await fetchData();\n      }\n    } catch (error) {\n      console.error(\"Error \".concat(crudAction, \" data for \").concat(selectedTable, \":\"), error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"center-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Admin Management\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Select Table:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedTable,\n          onChange: e => setSelectedTable(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select a table\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), tables.map(table => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: table,\n            children: table\n          }, table, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Select Action:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: crudAction,\n          onChange: e => setCrudAction(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select an action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"get\",\n            children: \"Get\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"post\",\n            children: \"Post\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"patch\",\n            children: \"Patch\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"delete\",\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCrud,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), data.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"center-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Data for \".concat(selectedTable)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: data.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: JSON.stringify(item)\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminManagement, \"8xIKqBw3TmTyrqEBGuFB655Bafg=\");\n_c = AdminManagement;\nexport default AdminManagement;\nvar _c;\n$RefreshReg$(_c, \"AdminManagement\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","AdminManagement","_s","selectedTable","setSelectedTable","tables","setTables","crudAction","setCrudAction","data","setData","formData","setFormData","fetchTables","response","get","error","console","fetchData","concat","handleCrud","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","map","table","onClick","length","item","JSON","stringify","id","_c","$RefreshReg$"],"sources":["C:/Users/gongg/my-app/Project React/React-Client/src/components/AdminCRUDBanners.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './AdminManagement.css'; // Import your CSS file\r\n\r\nconst AdminManagement = () => {\r\n  const [selectedTable, setSelectedTable] = useState('');\r\n  const [tables, setTables] = useState([]);\r\n  const [crudAction, setCrudAction] = useState('');\r\n  const [data, setData] = useState([]);\r\n  const [formData, setFormData] = useState({});\r\n\r\n  // Fetch available tables when the component mounts\r\n  useEffect(() => {\r\n    const fetchTables = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:3004/tables');\r\n        setTables(response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching tables:', error);\r\n      }\r\n    };\r\n\r\n    fetchTables();\r\n  }, []);\r\n\r\n  // Fetch data for the selected table\r\n  const fetchData = async () => {\r\n    try {\r\n      const response = await axios.get(`http://localhost:3004/${selectedTable}`);\r\n      setData(response.data);\r\n    } catch (error) {\r\n      console.error(`Error fetching data for ${selectedTable}:`, error);\r\n    }\r\n  };\r\n\r\n  // Perform CRUD operation\r\n  const handleCrud = async () => {\r\n    try {\r\n      if (crudAction === 'get') {\r\n        await fetchData();\r\n      } else {\r\n        const response = await axios[crudAction](`http://localhost:3004/${selectedTable}`, formData);\r\n        console.log(response.data);\r\n        // Optionally, you can fetch the updated data after a successful CRUD operation\r\n        await fetchData();\r\n      }\r\n    } catch (error) {\r\n      console.error(`Error ${crudAction} data for ${selectedTable}:`, error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"center-content\">\r\n        <h1>Admin Management</h1>\r\n        <label>\r\n          Select Table:\r\n          <select value={selectedTable} onChange={(e) => setSelectedTable(e.target.value)}>\r\n            <option value=\"\">Select a table</option>\r\n            {tables.map((table) => (\r\n              <option key={table} value={table}>\r\n                {table}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </label>\r\n        <label>\r\n          Select Action:\r\n          <select value={crudAction} onChange={(e) => setCrudAction(e.target.value)}>\r\n            <option value=\"\">Select an action</option>\r\n            <option value=\"get\">Get</option>\r\n            <option value=\"post\">Post</option>\r\n            <option value=\"patch\">Patch</option>\r\n            <option value=\"delete\">Delete</option>\r\n          </select>\r\n        </label>\r\n        <button onClick={handleCrud}>Submit</button>\r\n      </div>\r\n      {/* Display data if available */}\r\n      {data.length > 0 && (\r\n        <div className=\"center-content\">\r\n          <h2>{`Data for ${selectedTable}`}</h2>\r\n          <ul>\r\n            {data.map((item) => (\r\n              <li key={item.id}>{JSON.stringify(item)}</li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminManagement;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}