{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gongg\\\\my-app\\\\Project React\\\\React-Client\\\\src\\\\components\\\\AdminCRUDBanners.jsx\",\n  _s = $RefreshSig$();\n// AdminManagement.js\nimport React, { useState, useEffect } from 'react';\nimport { Container } from 'react-bootstrap';\nimport BannersEdit from './BannersEdit'; // Import the BannersEdit component\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminManagement = () => {\n  _s();\n  const [selectedTable, setSelectedTable] = useState('');\n  const [tables, setTables] = useState([]);\n  const [crudAction, setCrudAction] = useState('');\n  const [data, setData] = useState([]);\n  const [formData, setFormData] = useState({});\n  useEffect(() => {\n    const fetchTables = async () => {\n      try {\n        const response = await axios.get('http://localhost:3004/tables');\n        setTables(response.data);\n      } catch (error) {\n        console.error('Error fetching tables:', error);\n      }\n    };\n    fetchTables();\n  }, []);\n  const fetchData = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:3004/\".concat(selectedTable));\n      setData(response.data);\n    } catch (error) {\n      console.error(\"Error fetching data for \".concat(selectedTable, \":\"), error);\n    }\n  };\n  const handleCrud = async () => {\n    try {\n      if (crudAction === 'get') {\n        await fetchData();\n      } else {\n        // You can implement other CRUD actions here\n        // For now, let's assume there's a separate component for BannersEdit\n        // and we'll render it when the selected table is 'banners'\n        if (selectedTable === 'banners') {\n          // Render the BannersEdit component\n          // Note: You may need to pass additional props to the BannersEdit component if required\n          return /*#__PURE__*/_jsxDEV(BannersEdit, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 18\n          }, this);\n        }\n      }\n    } catch (error) {\n      console.error(\"Error \".concat(crudAction, \" data for \").concat(selectedTable, \":\"), error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      background: '#3cdbde',\n      minHeight: '100vh',\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center'\n    },\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      style: {\n        width: '700px',\n        height: '800px',\n        marginTop: '20px',\n        padding: '20px',\n        border: '10px solid black',\n        borderRadius: '8px',\n        backgroundColor: 'white',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          margin: '30px',\n          fontSize: '1rem'\n        },\n        children: \"Admin Management\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '20px'\n        },\n        children: tables.map(table => /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#\",\n          onClick: () => setSelectedTable(table),\n          style: {\n            margin: '0 10px',\n            padding: '5px 10px',\n            textDecoration: 'none',\n            backgroundColor: selectedTable === table ? '#40eb42' : 'whitesmoke',\n            color: selectedTable === table ? 'white' : 'black',\n            borderRadius: '5px',\n            cursor: 'pointer'\n          },\n          children: table\n        }, table, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Select Action:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: crudAction,\n          onChange: e => setCrudAction(e.target.value),\n          style: {\n            marginBottom: '10px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select an action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"get\",\n            children: \"Get\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"post\",\n            children: \"Post\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"patch\",\n            children: \"Patch\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"delete\",\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCrud,\n        style: {\n          marginTop: '10px',\n          padding: '10px',\n          fontWeight: 'bold',\n          transition: 'background-color 0.3s',\n          backgroundColor: '#40eb42',\n          color: 'white',\n          border: 'none',\n          borderRadius: '5px',\n          cursor: 'pointer'\n        },\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), handleCrud(), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminManagement, \"8xIKqBw3TmTyrqEBGuFB655Bafg=\");\n_c = AdminManagement;\nexport default AdminManagement;\nvar _c;\n$RefreshReg$(_c, \"AdminManagement\");","map":{"version":3,"names":["React","useState","useEffect","Container","BannersEdit","axios","jsxDEV","_jsxDEV","AdminManagement","_s","selectedTable","setSelectedTable","tables","setTables","crudAction","setCrudAction","data","setData","formData","setFormData","fetchTables","response","get","error","console","fetchData","concat","handleCrud","fileName","_jsxFileName","lineNumber","columnNumber","style","background","minHeight","display","flexDirection","alignItems","children","width","height","marginTop","padding","border","borderRadius","backgroundColor","margin","fontSize","marginBottom","map","table","href","onClick","textDecoration","color","cursor","value","onChange","e","target","fontWeight","transition","_c","$RefreshReg$"],"sources":["C:/Users/gongg/my-app/Project React/React-Client/src/components/AdminCRUDBanners.jsx"],"sourcesContent":["// AdminManagement.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Container } from 'react-bootstrap';\r\nimport BannersEdit from './BannersEdit'; // Import the BannersEdit component\r\nimport axios from 'axios';\r\n\r\nconst AdminManagement = () => {\r\n  const [selectedTable, setSelectedTable] = useState('');\r\n  const [tables, setTables] = useState([]);\r\n  const [crudAction, setCrudAction] = useState('');\r\n  const [data, setData] = useState([]);\r\n  const [formData, setFormData] = useState({});\r\n\r\n  useEffect(() => {\r\n    const fetchTables = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:3004/tables');\r\n        setTables(response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching tables:', error);\r\n      }\r\n    };\r\n\r\n    fetchTables();\r\n  }, []);\r\n\r\n  const fetchData = async () => {\r\n    try {\r\n      const response = await axios.get(`http://localhost:3004/${selectedTable}`);\r\n      setData(response.data);\r\n    } catch (error) {\r\n      console.error(`Error fetching data for ${selectedTable}:`, error);\r\n    }\r\n  };\r\n\r\n  const handleCrud = async () => {\r\n    try {\r\n      if (crudAction === 'get') {\r\n        await fetchData();\r\n      } else {\r\n        // You can implement other CRUD actions here\r\n        // For now, let's assume there's a separate component for BannersEdit\r\n        // and we'll render it when the selected table is 'banners'\r\n        if (selectedTable === 'banners') {\r\n          // Render the BannersEdit component\r\n          // Note: You may need to pass additional props to the BannersEdit component if required\r\n          return <BannersEdit />;\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error(`Error ${crudAction} data for ${selectedTable}:`, error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ background: '#3cdbde', minHeight: '100vh', display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\r\n      <Container style={{ width: '700px', height: '800px', marginTop: '20px', padding: '20px', border: '10px solid black', borderRadius: '8px', backgroundColor: 'white', display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\r\n        <h1 style={{ margin: '30px', fontSize: '1rem' }}>Admin Management</h1>\r\n        <div style={{ marginBottom: '20px' }}>\r\n          {tables.map((table) => (\r\n            <a\r\n              key={table}\r\n              href=\"#\"\r\n              onClick={() => setSelectedTable(table)}\r\n              style={{\r\n                margin: '0 10px',\r\n                padding: '5px 10px',\r\n                textDecoration: 'none',\r\n                backgroundColor: selectedTable === table ? '#40eb42' : 'whitesmoke',\r\n                color: selectedTable === table ? 'white' : 'black',\r\n                borderRadius: '5px',\r\n                cursor: 'pointer',\r\n              }}\r\n            >\r\n              {table}\r\n            </a>\r\n          ))}\r\n        </div>\r\n        <label>\r\n          Select Action:\r\n          <select value={crudAction} onChange={(e) => setCrudAction(e.target.value)} style={{ marginBottom: '10px' }}>\r\n            <option value=\"\">Select an action</option>\r\n            <option value=\"get\">Get</option>\r\n            <option value=\"post\">Post</option>\r\n            <option value=\"patch\">Patch</option>\r\n            <option value=\"delete\">Delete</option>\r\n          </select>\r\n        </label>\r\n        <button\r\n          onClick={handleCrud}\r\n          style={{\r\n            marginTop: '10px',\r\n            padding: '10px',\r\n            fontWeight: 'bold',\r\n            transition: 'background-color 0.3s',\r\n            backgroundColor: '#40eb42',\r\n            color: 'white',\r\n            border: 'none',\r\n            borderRadius: '5px',\r\n            cursor: 'pointer',\r\n          }}\r\n        >\r\n          Submit\r\n        </button>\r\n        {handleCrud()} {/* Render the component based on the selected table and action */}\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminManagement;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}