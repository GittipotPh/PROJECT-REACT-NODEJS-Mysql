{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gongg\\\\my-app\\\\project React2\\\\React-Client\\\\src\\\\components\\\\Samsaung.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport GoogleMapComponent from './APIgoogle';\nimport BannerFetch from './BannersFetch';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Samsaung() {\n  _s();\n  const [banners, setBanners] = useState([]);\n  useEffect(() => {\n    // Fetch banners using Axios\n    axios.get('http://localhost:3004/banners').then(response => setBanners(response.data)).catch(error => console.error('Error fetching banners:', error));\n  }, []); // Empty dependency array to run the effect only once on mount\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [banners.map(banner => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: banner.img_brand_url,\n        alt: banner.topic\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: banner.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this)]\n    }, banner.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(GoogleMapComponent, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n_s(Samsaung, \"hrLvPCLPHM6cpg7gXxBBGT80Iz0=\");\n_c = Samsaung;\nexport default Samsaung;\nvar _c;\n$RefreshReg$(_c, \"Samsaung\");","map":{"version":3,"names":["React","useState","useEffect","axios","GoogleMapComponent","BannerFetch","jsxDEV","_jsxDEV","Samsaung","_s","banners","setBanners","get","then","response","data","catch","error","console","children","map","banner","src","img_brand_url","alt","topic","fileName","_jsxFileName","lineNumber","columnNumber","content","id","_c","$RefreshReg$"],"sources":["C:/Users/gongg/my-app/project React2/React-Client/src/components/Samsaung.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport GoogleMapComponent from './APIgoogle';\r\nimport BannerFetch from './BannersFetch';\r\n\r\nfunction Samsaung() {\r\n  const [banners, setBanners] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Fetch banners using Axios\r\n    axios.get('http://localhost:3004/banners')\r\n      .then(response => setBanners(response.data))\r\n      .catch(error => console.error('Error fetching banners:', error));\r\n  }, []); // Empty dependency array to run the effect only once on mount\r\n\r\n  return (\r\n    <div>\r\n      {/* Render banners over the Google Map */}\r\n      {banners.map(banner => (\r\n        <div key={banner.id}>\r\n          <img src={banner.img_brand_url} alt={banner.topic} />\r\n          <p>{banner.content}</p>\r\n        </div>\r\n      ))}\r\n\r\n      {/* Render the Google Map component */}\r\n      <GoogleMapComponent />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Samsaung;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,kBAAkB,MAAM,aAAa;AAC5C,OAAOC,WAAW,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAE1CC,SAAS,CAAC,MAAM;IACd;IACAC,KAAK,CAACS,GAAG,CAAC,+BAA+B,CAAC,CACvCC,IAAI,CAACC,QAAQ,IAAIH,UAAU,CAACG,QAAQ,CAACC,IAAI,CAAC,CAAC,CAC3CC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC,CAAC;EACpE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACEV,OAAA;IAAAY,QAAA,GAEGT,OAAO,CAACU,GAAG,CAACC,MAAM,iBACjBd,OAAA;MAAAY,QAAA,gBACEZ,OAAA;QAAKe,GAAG,EAAED,MAAM,CAACE,aAAc;QAACC,GAAG,EAAEH,MAAM,CAACI;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACrDtB,OAAA;QAAAY,QAAA,EAAIE,MAAM,CAACS;MAAO;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA,GAFfR,MAAM,CAACU,EAAE;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGd,CACN,CAAC,eAGFtB,OAAA,CAACH,kBAAkB;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnB,CAAC;AAEV;AAACpB,EAAA,CAxBQD,QAAQ;AAAAwB,EAAA,GAARxB,QAAQ;AA0BjB,eAAeA,QAAQ;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}