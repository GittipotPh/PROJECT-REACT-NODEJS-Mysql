{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gongg\\\\my-app\\\\Project React\\\\React-Client\\\\src\\\\components\\\\LoginAdminPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LoginAdminPage(_ref) {\n  _s();\n  let {\n    AdminonLogin\n  } = _ref;\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const handleAdminLoginClick = async () => {\n    try {\n      const response = await axios.post(\"api/adminlogin\", {\n        username,\n        password\n      });\n      if (response.status === 200) {\n        AdminonLogin();\n        navigate(\"/adminpage\");\n      } else {\n        setError(\"Login failed\");\n      }\n    } catch (error) {\n      setError(\"Login Failed, Please check your username and password\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"LoginInput\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"LoginH1\",\n      children: \"Login Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Username\",\n      value: username,\n      onChange: e => setUsername(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"Password\",\n      value: password,\n      onChange: e => setPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"ButtonLogin\",\n      onClick: handleAdminLoginClick,\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_s(LoginAdminPage, \"Lrw7JeD9zj6OUWhT/IH4OIvPKEk=\");\n_c = LoginAdminPage;\nexport default LoginAdminPage;\nvar _c;\n$RefreshReg$(_c, \"LoginAdminPage\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","LoginAdminPage","_ref","_s","AdminonLogin","username","setUsername","password","setPassword","handleAdminLoginClick","response","post","status","navigate","setError","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/gongg/my-app/Project React/React-Client/src/components/LoginAdminPage.jsx"],"sourcesContent":["\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction LoginAdminPage({ AdminonLogin }) {\r\n    const [username, setUsername] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n\r\n    const handleAdminLoginClick = async () => {\r\n        try {\r\n        const response = await axios.post(\"api/adminlogin\", { username, password });\r\n        if (response.status === 200) {\r\n    \r\n            AdminonLogin();\r\n    \r\n            navigate(\"/adminpage\");\r\n        } else {\r\n            setError(\"Login failed\");\r\n        }\r\n        } catch (error) {\r\n        setError(\"Login Failed, Please check your username and password\");\r\n        }}\r\n\r\nreturn (\r\n    <div className=\"LoginInput\">\r\n    <h1 className=\"LoginH1\">Login Page</h1>\r\n    <input type=\"text\" placeholder=\"Username\" value={username} onChange={(e) => setUsername(e.target.value)} />\r\n    <input type=\"password\" placeholder=\"Password\" value={password} onChange={(e) => setPassword(e.target.value)} />\r\n    <button className=\"ButtonLogin\" onClick={handleAdminLoginClick}>Login</button>\r\n    </div>\r\n);}\r\n\r\nexport default LoginAdminPage;\r\n"],"mappings":";;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,cAAcA,CAAAC,IAAA,EAAmB;EAAAC,EAAA;EAAA,IAAlB;IAAEC;EAAa,CAAC,GAAAF,IAAA;EACpC,MAAM,CAACG,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMY,qBAAqB,GAAG,MAAAA,CAAA,KAAY;IACtC,IAAI;MACJ,MAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAACa,IAAI,CAAC,gBAAgB,EAAE;QAAEN,QAAQ;QAAEE;MAAS,CAAC,CAAC;MAC3E,IAAIG,QAAQ,CAACE,MAAM,KAAK,GAAG,EAAE;QAEzBR,YAAY,CAAC,CAAC;QAEdS,QAAQ,CAAC,YAAY,CAAC;MAC1B,CAAC,MAAM;QACHC,QAAQ,CAAC,cAAc,CAAC;MAC5B;IACA,CAAC,CAAC,OAAOC,KAAK,EAAE;MAChBD,QAAQ,CAAC,uDAAuD,CAAC;IACjE;EAAC,CAAC;EAEV,oBACId,OAAA;IAAKgB,SAAS,EAAC,YAAY;IAAAC,QAAA,gBAC3BjB,OAAA;MAAIgB,SAAS,EAAC,SAAS;MAAAC,QAAA,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvCrB,OAAA;MAAOsB,IAAI,EAAC,MAAM;MAACC,WAAW,EAAC,UAAU;MAACC,KAAK,EAAEnB,QAAS;MAACoB,QAAQ,EAAGC,CAAC,IAAKpB,WAAW,CAACoB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC3GrB,OAAA;MAAOsB,IAAI,EAAC,UAAU;MAACC,WAAW,EAAC,UAAU;MAACC,KAAK,EAAEjB,QAAS;MAACkB,QAAQ,EAAGC,CAAC,IAAKlB,WAAW,CAACkB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC/GrB,OAAA;MAAQgB,SAAS,EAAC,aAAa;MAACY,OAAO,EAAEnB,qBAAsB;MAAAQ,QAAA,EAAC;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzE,CAAC;AACR;AAAClB,EAAA,CA1BMF,cAAc;AAAA4B,EAAA,GAAd5B,cAAc;AA4BvB,eAAeA,cAAc;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}